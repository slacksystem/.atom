# Your keymap
#'atom-text-editor.vim-mode-plus:not(.normal-mode) atom.workspace.vim-mode-plus:not(.visual-mode)':
'atom-text-editor.vim-mode-plus.insert-mode':
  'j j': 'vim-mode-plus:activate-normal-mode'


'atom-workspace':
  'ctrl-i':     'cursor-history:next'
  'ctrl-o':     'cursor-history:prev'
  'ctrl-w': 'editor:delete-to-beginning-of-word'
  'ctrl-u': 'editor:delete-to-beginning-of-line'
  'ctrl-y': 'vim-mode:copy-from-line-above'

'atom-workspace:not([mini])':

  # Open my local config
  'ctrl-alt-e i': 'application:open-your-init-script'
  'ctrl-alt-e c': 'application:open-your-config'
  'ctrl-alt-e k': 'application:open-your-keymap'
  'ctrl-alt-e s': 'application:open-your-stylesheet'
  'ctrl-alt-e n': 'application:open-your-snippets'
  'ctrl-alt-e p': 'project-folder:open-config'
  'ctrl-alt-e t': 'toggle:open-config'

#'atom-text-editor.vim-mode-plus':
#  'j j': 'vim-mode-plus:reset-normal-mode'
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson
